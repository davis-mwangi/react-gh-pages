{"version":3,"sources":["assets/images/logo-wb-header-en.svg","hoc/Auxi.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/DataCatalogs/DataCatalog/DataCatalog.js","components/UI/Spinner/Spinner.js","containers/DataCatalogs/DataCatalogs.js","store/actions/catalogs.js","store/actions/actionTypes.js","containers/Login/Login.js","containers/SignUp/SignUp.js","App.js","serviceWorker.js","store/reducers/catalogReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","auxi","props","children","logo","react_default","a","createElement","className","classes","Logo","style","height","src","worldbankLogo","alt","navigationItem","clasess","NavigationItem","NavLink","to","link","exact","activeClassName","active","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","Nav","NavLeft","NavList","NavigationItem_NavigationItem","NavRight","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Auxi","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","SideDrawer_SideDrawer","isAuth","isAuthenticated","Content","Component","DataCatalog","stripeTags","description","replace","href","url","target","rel","Heading","name","acronym","detailpageurl","spinner","Loader","DataCatalogs","onFetchCatalogs","catalogs","Spinner_Spinner","catalogsArray","loading","forEach","value","newObj","metatype","map","catalog","push","console","log","DataCatalogs_DataCatalog_DataCatalog","key","Math","random","languagesupported","economycoverage","updatefrequency","updateschedule","lastrevisiondate","cite","topics","contactdetails","bulkdownload","numberofeconomies","type","granularity","popularity","periodicity","connect","cat","dispatch","axios","get","then","response","data","datacatalog","catch","error","fetchCatalogFail","login","signUp","App","containers_Layout_Layout","Switch","Route","path","component","Login","SignUp","Redirect","withRouter","Boolean","window","location","hostname","match","initialState","reducer","arguments","length","undefined","action","Object","objectSpread","fetchCatalogsStart","fetchCatalogsSuccess","fetchCatalogsFail","composeEnhancers","compose","rootReducer","combineReducers","catalogReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bff97ae6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-wb-header-en.8a87b797.svg\";","const auxi = props => props.children\r\nexport default auxi;","import React from 'react';\r\nimport classes from './Logo.css';\r\nimport worldbankLogo  from '../../assets/images/logo-wb-header-en.svg';\r\n\r\n\r\nconst logo = (props) => (\r\n   <div className={classes.Logo} style={{height:props.height}}>\r\n    <img src={worldbankLogo} alt=\"World Bank Logo\"/>\r\n   </div>\r\n);\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport clasess from './NavigationItem.css';\r\n\r\nconst navigationItem =(props)=>(\r\n     <li className={clasess.NavigationItem} >\r\n        <NavLink\r\n           to={props.link}\r\n           exact={props.exact}\r\n           activeClassName={clasess.active}>\r\n             {props.children}\r\n        </NavLink>\r\n\r\n     </li>\r\n);\r\nexport default navigationItem;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.css';\r\n\r\nconst drawerToggle = (props)=>(\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\r\nimport DrawerToggle from '../../Navigation/SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar  = (props)=> (\r\n    <header className={classes.Toolbar}>\r\n     <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n    <div className={classes.Logo}>\r\n         <Logo/>\r\n    </div>\r\n\r\n    <div className={classes.Nav}>\r\n    \r\n        <nav className={classes.NavLeft}>\r\n            <ul className={classes.NavList}>\r\n                <NavigationItem link=\"/\" exact >Data Catalog</NavigationItem>\r\n            </ul>\r\n        </nav>\r\n        \r\n        <nav className={classes.NavRight}>\r\n            <ul className={classes.NavList}>\r\n                <NavigationItem link=\"/login\" >Login</NavigationItem>\r\n                <NavigationItem link=\"/signup\" >Sign Up</NavigationItem>\r\n            </ul>\r\n        </nav>\r\n        \r\n            \r\n    </div>\r\n\r\n    </header>\r\n);\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.css';\r\n\r\nconst backdrop = (props)=>(\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItem from '../NavigationItems/NavigationItem/NavigationItem';\r\nimport classes from './SideDrawer.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxi';\r\n\r\nconst sideDrawer = (props)=>{\r\n    let attachedClasses = [classes.SideDrawer,classes.Close];\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return(\r\n       <Aux>\r\n        <Backdrop show={props.open} clicked ={props.closed}/>  \r\n        <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n            <div className={classes.Logo}>\r\n                <Logo/>\r\n            </div>\r\n            <div className={classes.Nav}>\r\n    \r\n    <nav className={classes.NavLeft}>\r\n        <ul className={classes.NavList}>\r\n            <NavigationItem link=\"/\" exact >Data Catalog</NavigationItem>\r\n            <NavigationItem link=\"/login\" >Login</NavigationItem>\r\n            <NavigationItem link=\"/signup\" >Sign Up</NavigationItem>\r\n        </ul>\r\n    </nav>\r\n    \r\n        \r\n</div>\r\n        </div> \r\n          \r\n          \r\n       </Aux>\r\n    );\r\n};\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\n\r\n\r\nimport Aux from '../../hoc/Auxi'\r\nimport classes from './Layout.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component{\r\n    state ={\r\n        showSideDrawer :false,\r\n       \r\n    }\r\n    sideDrawerClosedHandler = () =>{\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n    sideDrawerToggleHandler=()=>{\r\n        this.setState((prevState) =>{\r\n            return {showSideDrawer: !prevState.showSideDrawer};\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <Aux>\r\n               <Toolbar \r\n                  drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}/>  \r\n               <main className={classes.Content}>\r\n                   {this.props.children}\r\n               </main>\r\n           </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport  default Layout;","import React from 'react';\r\nimport classes from './DataCatalog.css';\r\n\r\nconst DataCatalog = (props) =>{\r\n\r\n    let stripeTags = props.description.replace(/<\\/?[^>]+>/gi, '')\r\n     return(\r\n        <div className={classes.DataCatalog} >\r\n            <a href={props.url} target=\"_blank\" rel=\"noopener noreferrer\"><h3 className={classes.Heading}>{props.name} ({props.acronym})</h3></a>\r\n            <p>{stripeTags}</p>\r\n            <a href={props.detailpageurl} target=\"_blank\" rel=\"noopener noreferrer\"><button >View Details</button></a>\r\n        </div>\r\n     )\r\n        \r\n      \r\n    \r\n};\r\n\r\nexport default DataCatalog;","import React from 'react';\r\n\r\nimport classes from './Spinner.css'\r\n\r\nconst spinner = () =>(\r\n    <div className={classes.Loader}>Loading...</div>\r\n\r\n);\r\nexport default spinner;","import React,{Component} from 'react';\r\nimport classes from './DataCatalogs.css'\r\nimport {connect} from 'react-redux';\r\n\r\nimport DataCatalog from './DataCatalog/DataCatalog';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass DataCatalogs extends Component{\r\n\r\n   componentDidMount(){\r\n       this.props.onFetchCatalogs()\r\n   }\r\n\r\n    render(){\r\n        let catalogs = <Spinner/>\r\n        let catalogsArray = []\r\n        if(!this.props.loading){\r\n            \r\n            this.props.catalogs.forEach(value => {\r\n                //console.log(value.metatype)\r\n                let newObj = {}\r\n                catalogs= value.metatype.map(catalog=>(\r\n                    newObj[catalog['id']]= catalog['value']\r\n                ));\r\n              \r\n             catalogsArray.push(newObj) \r\n            });\r\n\r\n            \r\n            console.log(catalogsArray)   \r\n           //console.log(catalogsArray)\r\n           catalogs = catalogsArray.map(catalog =>(\r\n                    <DataCatalog\r\n                    key={Math.random()*100}\r\n                    name= {catalog.name}\r\n                    url = {catalog.url}\r\n                    acronym={catalog.acronym}\r\n                    languagesupported={catalog.languagesupported}\r\n                    description= {catalog.description}\r\n                    economycoverage ={catalog.economycoverage}\r\n                    updatefrequency={catalog.updatefrequency}\r\n                    updateschedule={catalog.updateschedule}\r\n                    lastrevisiondate={catalog.lastrevisiondate}\r\n                    detailpageurl={catalog.detailpageurl}\r\n                    cite={catalog.cite}\r\n                    topics={catalog.topics}\r\n                    contactdetails={catalog.contactdetails}\r\n                    bulkdownload={catalog.bulkdownload}\r\n                    numberofeconomies={catalog.numberofeconomies}\r\n                    type={catalog.type}\r\n                    granularity={catalog.granularity}\r\n                    popularity={catalog.popularity}\r\n                    periodicity={catalog.periodicity}\r\n\r\n         />\r\n             ))\r\n         }\r\n        return(\r\n            <div className={classes.DataCatalogs}>\r\n                   {catalogs}\r\n            </div>\r\n        );\r\n       \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        catalogs: state.cat.catalogs,\r\n        loading: state.cat.loading\r\n    };\r\n};\r\nconst mapDispatchToProps = dispatch =>{\r\n    return{\r\n        onFetchCatalogs:() => dispatch(actions.fetchCatalogs())\r\n    }\r\n}\r\nexport default  connect(mapStateToProps,mapDispatchToProps) (DataCatalogs);\r\n  \r\n","import axios from 'axios';\r\n\r\nimport *as actionTypes from './actionTypes';\r\n\r\nexport const fetchCatalogStart = () =>{\r\n    return{\r\n        type: actionTypes.FETCH_CATALOG_START\r\n    };\r\n};\r\n\r\nexport const fetchCatalogSuccess = (catalogs) =>{\r\n    return{\r\n        type: actionTypes.FETCH_CATALOG_SUCCESS,\r\n        catalogs :catalogs\r\n    };\r\n};\r\n\r\nexport const fetchCatalogFail = (error) =>{\r\n    return{\r\n        type: actionTypes.FETCH_CATALOG_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchCatalogs = () =>{\r\n    return dispatch => {\r\n       dispatch(fetchCatalogStart());\r\n       axios.get('http://127.0.0.1:5000/api/v1/data_catalog')\r\n         .then(response => {\r\n             console.log(response.data.datacatalog);\r\n             dispatch(fetchCatalogSuccess(response.data.datacatalog));\r\n         })\r\n         .catch(error => {\r\n              dispatch(fetchCatalogFail(error));\r\n         });\r\n    };\r\n};","export const FETCH_CATALOG_START = 'FETCH_CATALOG_START';\r\nexport const FETCH_CATALOG_SUCCESS = 'FETCH_CATALOG_SUCCESS';\r\nexport const FETCH_CATALOG_FAIL = 'FETCH_CATALOG_FAIL';","import React from 'react';\r\n\r\nconst login = () =>(\r\n   <div>Login Page</div> \r\n);\r\nexport default login;","import React from 'react';\r\n\r\nconst signUp = () =>(\r\n   <div>Sign Up Page</div> \r\n);\r\nexport default signUp;","import React, { Component } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\nimport DataCatalogs from './containers/DataCatalogs/DataCatalogs';\nimport Login from './containers/Login/Login';\nimport SignUp from './containers/SignUp/SignUp'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n             <Route path=\"/\" exact component={DataCatalogs}/>\n             <Route path=\"/login\"  component={Login}/>\n             <Route path=\"/signup\"  component={SignUp}/>\n             <Redirect to=\"/\" />\n          </Switch>\n           \n        </Layout>\n      </div>\n    ); \n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    catalogs: [],\r\n    loading: false\r\n}\r\n\r\nconst fetchCatalogsStart = (state,action) => {\r\n    return{\r\n        ...state,\r\n        loading: true\r\n    };\r\n};\r\n\r\nconst fetchCatalogsSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        loading: false,\r\n        catalogs: action.catalogs\r\n    };\r\n};\r\n\r\nconst fetchCatalogsFail = (state,action) =>{\r\n    return {\r\n        ...state,\r\n        loading:false\r\n    };\r\n};\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.FETCH_CATALOG_START: return fetchCatalogsStart(state, action);\r\n        case actionTypes.FETCH_CATALOG_SUCCESS: return fetchCatalogsSuccess(state, action);\r\n        case actionTypes.FETCH_CATALOG_FAIL: return fetchCatalogsFail(state, action);\r\n        default: return state;\r\n    }\r\n};\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport { createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport catalogReducer from '../src/store/reducers/catalogReducer';\n\nconst composeEnhancers =  process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n     cat: catalogReducer\n});\n\nconst store = createStore(rootReducer,(\n      composeEnhancers(applyMiddleware(thunk))\n));\nconst app = (\n     <Provider store={store}>\n        <BrowserRouter>\n           <App/>\n        </BrowserRouter>\n     </Provider> \n      \n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}